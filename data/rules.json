[
    {
        "pointer": "/",
        "type": "object",
        "required": ["geometry"],
        "optional":["boundary_conditions", "space", "time", "contact", "solver", "materials", "output"],
        "doc": "Root of the configuration file."
    },
    {
        "pointer": "/geometry",
        "type": "list",
        "min": 1,
        "doc": "List of /geometry objects."
    },
    {
        "pointer": "/geometry/*",
        "type": "object",
        "required": ["mesh"],
        "optional": ["transformation","volume_selection","surface_selection","n_refs","advanced", "enabled", "is_obstacle"],
        "doc": "Each geometry object stores a mesh, a set of transformations applied to it after loading, and a set of selections, which can be used to specify boundary conditions and materials."
    },
    {
        "pointer": "/geometry/*/mesh",
        "type": "file",
        "extensions": [".obj",".msh", ".stl"],
        "doc": "Path of the mesh file to load."
    },
    {
        "pointer": "/geometry/*/transformation",
        "type": "object",
        "default": null,
        "optional": ["translation","rotation","scale"],
        "doc": "Geometric transformations applied to the geometry after loading it."
    },
    {
        "pointer": "/geometry/*/transformation/translation",
        "type": "list",
        "default": [0,0,0]
    },
    {
        "pointer": "/geometry/*/transformation/rotation",
        "type": "list",
        "default": null
    },
    {
        "pointer": "/geometry/*/transformation/scale",
        "type": "list",
        "default": null
    },
    {
        "pointer": "/geometry/*/transformation/translation/*",
        "type": "float",
        "default": 0,
        "doc": "Translation vector (2 entries for 2D problems, 3 entries for 3D problems)."
    },
    {
        "pointer": "/geometry/*/transformation/rotation/*",
        "default": 0,
        "type": "float"
    },
    {
        "pointer": "/geometry/*/transformation/scale/*",
        "default": 0,
        "type": "float"
    },
    {
        "pointer": "/geometry/*/volume_selection",
        "type": "int",
        "default": 0
    },
    {
        "pointer": "/geometry/*/volume_selection",
        "type": "file",
        "extensions": [".txt"]
    },
    {
        "pointer": "/geometry/*/surface_selection",
        "type": "int",
        "default": null
    },
    {
        "pointer": "/geometry/*/surface_selection",
        "type": "list"
    },
    {
        "pointer": "/geometry/*/surface_selection",
        "type": "file",
        "extensions": [".txt"]
    },
    {
        "pointer": "/geometry/*/surface_selection/*",
        "type": "object",
        "optional":["id", "axis", "position"],
        "default": null
    },
    {
        "pointer": "/geometry/*/surface_selection/*/id",
        "type": "int",
        "default": "//TODO"
    },
    {
        "pointer": "/geometry/*/surface_selection/*/axis",
        "type": "int",
        "default": "//TODO"
    },
    {
        "pointer": "/geometry/*/surface_selection/*/position",
        "type": "float",
        "default": "//TODO"
    },
    {
        "pointer": "/geometry/*/n_refs",
        "type": "int",
        "default": 0
    },
    {
        "pointer": "/geometry/*/advanced",
        "type": "object",
        "optional": ["normalize_mesh"],
        "default": null
    },
    {
        "pointer": "/geometry/*/advanced/normalize_mesh",
        "type": "bool",
        "default": false
    },
    {
        "pointer": "/geometry/*/is_obstacle",
        "type": "bool",
        "default": "//TODO"
    },
    {
        "pointer": "/geometry/*/enabled",
        "type": "bool",
        "default": "//TODO"
    },
    {
        "pointer": "/space",
        "type": "object",
        "optional": ["advanced"],
        "default": "//TODO",
        "doc": "Spcace parameter//TODO"
    },
    {
        "pointer": "/space/advanced",
        "type": "object",
        "default": "//TODO",
        "optional": ["quadrature_order"],
        "doc": "//TODO"
    },
    {
        "pointer": "/space/advanced/quadrature_order",
        "type": "int",
        "default": 1
    },
    {
        "pointer": "/time",
        "type": "object",
        "default": "//TODO",
        "optional": ["tend", "dt", "time_steps"],
        "doc": "The time parameters"
    },
    {
        "pointer": "/time/tend",
        "type": "float",
        "min":0,
        "default": 1
    },
    {
        "pointer": "/time/dt",
        "type": "float",
        "min":0,
        "default": 0.1
    },
    {
        "pointer": "/time/time_steps",
        "type": "int",
        "min":0,
        "default": 10
    },
    {
        "pointer": "/contact",
        "type": "object",
        "default":"//TODO",
        "optional": ["enabled", "dhat", "friction_coefficient"],
        "doc": "All the parameters to define contacts like collisions, friction coefficient"
    },
    {
        "pointer": "/contact/enabled",
        "type": "bool",
        "default": false
    },
    {
        "pointer": "/contact/dhat",
        "type": "float",
        "min":0,
        "default": 0.03
    },
    {
        "pointer": "/contact/friction_coefficient",
        "type": "float",
        "min":0,
        "default": 0.0
    },
    {
        "pointer": "/solver",
        "type": "object",
        "optional": ["linear", "nonlinear", "advanced"],
        "default": "//TODO",
        "doc": "The settings for the solver including Linear solver, nonlinear solver, and some advanced options"
    },
    {
        "pointer": "/solver/linear",
        "type": "object",
        "optional": ["solver"],
        "default": "//TODO",
        "doc": "Settings for linear solver"
    },
    {
        "pointer": "/solver/linear/solver",
        "type": "string",
        "default": "//TODO",
        "doc": "Linear solver type"
    },
    {
        "pointer": "/solver/nonlinear",
        "type": "object",
        "default": "//TODO",
        "optional": ["solver", "line_search", "grad_norm", "use_grad_norm"],
        "doc": "Settings for nonlinear solver"
    },
    {
        "pointer": "/solver/nonlinear/line_search",
        "type": "object",
        "optional": ["method"],
        "default": "//TODO",
        "doc": "Settings for line searcher"
    },
    {
        "pointer": "/solver/nonlinear/line_search/method",
        "type": "string",
        "default": "//TODO",
        "doc": "line search type"
    },
    {
        "pointer": "/solver/nonlinear/solver",
        "type": "string",
        "default": "//TODO",
        "doc": "Nonlinear solver type"
    },
    {
        "pointer": "/solver/nonlinear/grad_norm",
        "type": "float",
        "min": 0,
        "default": "//TODO",
        "doc": "Grad norm tolerance for the nonlinear solver"
    },
    {
        "pointer": "/solver/nonlinear/use_grad_norm",
        "type": "bool",
        "default": "//TODO",
        "doc": "//TODO"
    },
    {
        "pointer": "/solver/advanced",
        "type": "object",
        "default":"//TODO",
        "optional": ["lump_mass_matrix"],
        "doc": "Advanced settings for the solver"
    },
    {
        "pointer": "/solver/advanced/lump_mass_matrix",
        "type": "bool",
        "default":"//TODO"
    },
    {
        "pointer": "/boundary_conditions",
        "type": "object",
        "default":"//TODO",
        "optional":["rhs", "dirichlet_boundary", "neumann_boundary"],
        "doc": "The settings for boundary conditions"
    },
    {
        "pointer": "/boundary_conditions/rhs",
        "type": "list",
        "default":"//TODO",
        "doc": "//TODO"
    },
    {
        "pointer": "/boundary_conditions/rhs/*",
        "type":"float",
        "default":"//TODO"
    },
    {
        "pointer":"/boundary_conditions/dirichlet_boundary",
        "type":"list",
        "default":"//TODO",
        "doc": "The list of dirichlet boundary condition describing the displacement"
    },
    {
        "pointer":"/boundary_conditions/dirichlet_boundary/*",
        "type":"object",
        "default":"//TODO",
        "optional":["id", "value", "dimension"],
        "doc": "Dirichlet boundary condition"
    },
    {
        "pointer":"/boundary_conditions/dirichlet_boundary/*/id",
        "type":"int",
        "default":"//TODO",
        "doc": "id of Dirichlet boundary condition"
    },
    {
        "pointer":"/boundary_conditions/dirichlet_boundary/*/value",
        "type":"list",
        "default":"//TODO",
        "doc": "values of Dirichlet boundary condition for each dimension"
    },
    {
        "pointer":"/boundary_conditions/dirichlet_boundary/*/value/*",
        "type":"string",
        "default":"//TODO",
        "doc": "values of Dirichlet boundary condition for each dimension"
    },
    {
        "pointer":"/boundary_conditions/dirichlet_boundary/*/value/*",
        "type":"float",
        "default":"//TODO",
        "doc": "values of Dirichlet boundary condition for each dimension"
    },
    {
        "pointer":"/boundary_conditions/dirichlet_boundary/*/dimension",
        "type":"list",
        "default":"//TODO",
        "doc": "If the dimension is under dirichlet boundary condition"
    },
    {
        "pointer":"/boundary_conditions/dirichlet_boundary/*/dimension/*",
        "type":"bool",
        "default":"//TODO",
        "doc": "If the dimension is under dirichlet boundary condition"
    },
    {
        "pointer":"/boundary_conditions/neumann_boundary",
        "type":"list",
        "default":"//TODO",
        "doc": "The list of neumann boundary condition describing the forces"
    },
    {
        "pointer":"/boundary_conditions/neumann_boundary/*",
        "type":"object",
        "default":"//TODO",
        "optional":["id", "value", "dimension"],
        "doc": "Neumann boundary condition"
    },
    {
        "pointer":"/boundary_conditions/neumann_boundary/*/id",
        "type":"int",
        "default":"//TODO",
        "doc": "id of Neumann boundary condition"
    },
    {
        "pointer":"/boundary_conditions/neumann_boundary/*/value",
        "type":"list",
        "default":"//TODO",
        "doc": "values of neumann boundary condition for each dimension"
    },
    {
        "pointer":"/boundary_conditions/neumann_boundary/*/value/*",
        "type":"string",
        "default":"//TODO",
        "doc": "values of Neumann boundary condition for each dimension"
    },
    {
        "pointer":"/boundary_conditions/neumann_boundary/*/value/*",
        "type":"float",
        "default":"//TODO",
        "doc": "values of Neumann boundary condition for each dimension"
    },
    {
        "pointer":"/boundary_conditions/neumann_boundary/*/value/*",
        "type":"float",
        "default":"//TODO",
        "doc": "values of Neumann boundary condition for each dimension"
    },
    {
        "pointer":"/boundary_conditions/neumann_boundary/*/dimension",
        "type":"list",
        "default":"//TODO",
        "doc": "If the dimension is under neumann boundary condition"
    },
    {
        "pointer":"/boundary_conditions/neumann_boundary/*/dimension/*",
        "type":"bool",
        "default":"//TODO",
        "doc": "If the dimension is under neumann boundary condition"
    },
    {
        "pointer": "/materials",
        "type": "list",
        "default":"//TODO",
        "doc": "Material Parameters lists including id, Young's modulus(E), Poisson ratio(nu), Density(rho), type()"
    },
    {
        "pointer": "/materials/*",
        "type": "object",
        "optional": ["id", "E", "nu", "rho", "type", "mu", "lambda"],
        "doc": "Material Parameters including id, Young's modulus(E), Poisson ratio(nu), Density(rho), type()"
    },
    {
        "pointer": "/materials/*/id",
        "type":"int",
        "default":"//TODO",
        "doc":"id"
    },
    {
        "pointer": "/materials/*/E",
        "type":"float",
        "default":"//TODO",
        "doc":"Young's modulus"
    },
    {
        "pointer": "/materials/*/nu",
        "type":"float",
        "default":"//TODO",
        "doc":"Poisson ratio"
    },
    {
        "pointer": "/materials/*/rho",
        "type":"float",
        "default":"//TODO",
        "doc":"Density"
    },
    {
        "pointer": "/materials/*/type",
        "type":"string",
        "default":"//TODO",
        "doc":"Type of material"
    },
    {
        "pointer": "/materials/*/mu",
        "type":"float",
        "default":"//TODO",
        "doc":"//TODO"
    },
    {
        "pointer": "/materials/*/lambda",
        "type":"float",
        "default":"//TODO",
        "doc":"//TODO"
    },
    {
        "pointer": "/output",
        "type": "object",
        "optional":["json","paraview", "advanced"],
        "default":"//TODO",
        "doc": "Output settings about what to export"
    },
    {
        "pointer": "/output/json",
        "type": "string",
        "default":"//TODO",
        "doc":"The path to the json file"
    },
    {
        "pointer": "/output/paraview",
        "type": "object",
        "optional":["file_name", "options", "vismesh_rel_area"],
        "default":"//TODO",
        "doc":"The export options for paraview"
    },
    {
        "pointer":"/output/paraview/file_name",
        "type": "string",
        "default":"//TODO",
        "doc":"The time-dependent result series for the simulation(A list of *.vtu and *.vtm files)."
    },
    {
        "pointer":"/output/paraview/options",
        "type": "object",
        "optional":["material", "body_ids"],
        "default":"//TODO",
        "doc":"The parameters to export for paraview"
    },
    {
        "pointer":"/output/paraview/options/material",
        "type":"bool",
        "default":"//TODO"
    },
    {
        "pointer":"/output/paraview/options/body_ids",
        "type":"bool",
        "default":"//TODO"
    },
    {
        "pointer":"/output/paraview/vismesh_rel_area",
        "type":"int",
        "default":"//TODO",
        "doc":"//TODO"
    },
    {
        "pointer": "/output/advanced",
        "type": "object",
        "optional":["save_solve_sequence_debug", "save_time_sequence"],
        "default":"//TODO",
        "doc":"The advanced options for outputs"
    },
    {
        "pointer": "/output/advanced/save_solve_sequence_debug",
        "type":"bool",
        "default":"//TODO",
        "doc": "//TODO"
    },
    {
        "pointer": "/output/advanced/save_time_sequence",
        "type":"bool",
        "default":"//TODO",
        "doc": "Whether to save the results for each timestep"
    }
]